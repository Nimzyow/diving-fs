### This file was generated by Nexus Schema
### Do not make changes to this file directly


interface BaseError {
  field: String
  message: String
}

input CreatePostInputs {
  body: String!
}

type CreatePostOutput {
  createPostError: BaseError
  post: Post
}

union CreateUserError = EmailValidationError | HandleValidationError

input CreateUserInputs {
  email: String!
  handle: String!
  name: String!
  password: String!
}

type CreateUserOutput {
  createUserError: CreateUserError
  token: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type DiverCertification {
  createdAt: DateTime
  id: String
  name: String
  updatedAt: DateTime
}

type EmailValidationError implements BaseError {
  field: String
  message: String
}

type HandleValidationError implements BaseError {
  field: String
  message: String
}

input LoginUserInputs {
  email: String!
  password: String!
}

type Mutation {
  createPost(inputs: CreatePostInputs!): CreatePostOutput
  createUser(inputs: CreateUserInputs!): CreateUserOutput
  login(inputs: LoginUserInputs!): Token!
}

type Post {
  author: User
  authorId: String!
  body: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

type Query {
  me: User
}

enum Role {
  ADMIN
  STAFF
  SUPER_USER
  USER
}

type Success {
  success: Boolean!
}

type Token {
  token: String
}

type User {
  createdAt: DateTime
  diverCertifications: [DiverCertification]
  email: String
  handle: String
  id: String!
  name: String
  posts: [Post]
  role: Role
  updatedAt: DateTime
}
